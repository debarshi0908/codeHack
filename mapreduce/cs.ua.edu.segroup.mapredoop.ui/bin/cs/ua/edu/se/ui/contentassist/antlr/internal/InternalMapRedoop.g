/*
* generated by Xtext
*/
grammar InternalMapRedoop;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package cs.ua.edu.se.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package cs.ua.edu.se.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.xtext.parsetree.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import cs.ua.edu.se.services.MapRedoopGrammarAccess;

}

@parser::members {
 
 	private MapRedoopGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(MapRedoopGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleMapRedoop
entryRuleMapRedoop 
:
{ before(grammarAccess.getMapRedoopRule()); }
	 ruleMapRedoop
{ after(grammarAccess.getMapRedoopRule()); } 
	 EOF 
;

// Rule MapRedoop
ruleMapRedoop
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMapRedoopAccess().getGroup()); }
(rule__MapRedoop__Group__0)
{ after(grammarAccess.getMapRedoopAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContent
entryRuleContent 
:
{ before(grammarAccess.getContentRule()); }
	 ruleContent
{ after(grammarAccess.getContentRule()); } 
	 EOF 
;

// Rule Content
ruleContent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getContentAccess().getAlternatives()); }
(rule__Content__Alternatives)
{ after(grammarAccess.getContentAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleListofEntities
entryRuleListofEntities 
:
{ before(grammarAccess.getListofEntitiesRule()); }
	 ruleListofEntities
{ after(grammarAccess.getListofEntitiesRule()); } 
	 EOF 
;

// Rule ListofEntities
ruleListofEntities
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getListofEntitiesAccess().getGroup()); }
(rule__ListofEntities__Group__0)
{ after(grammarAccess.getListofEntitiesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMRBlock
entryRuleMRBlock 
:
{ before(grammarAccess.getMRBlockRule()); }
	 ruleMRBlock
{ after(grammarAccess.getMRBlockRule()); } 
	 EOF 
;

// Rule MRBlock
ruleMRBlock
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMRBlockAccess().getGroup()); }
(rule__MRBlock__Group__0)
{ after(grammarAccess.getMRBlockAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDeclaration
entryRuleDeclaration 
:
{ before(grammarAccess.getDeclarationRule()); }
	 ruleDeclaration
{ after(grammarAccess.getDeclarationRule()); } 
	 EOF 
;

// Rule Declaration
ruleDeclaration
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDeclarationAccess().getGroup()); }
(rule__Declaration__Group__0)
{ after(grammarAccess.getDeclarationAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMapper
entryRuleMapper 
:
{ before(grammarAccess.getMapperRule()); }
	 ruleMapper
{ after(grammarAccess.getMapperRule()); } 
	 EOF 
;

// Rule Mapper
ruleMapper
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMapperAccess().getGroup()); }
(rule__Mapper__Group__0)
{ after(grammarAccess.getMapperAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArgument
entryRuleArgument 
:
{ before(grammarAccess.getArgumentRule()); }
	 ruleArgument
{ after(grammarAccess.getArgumentRule()); } 
	 EOF 
;

// Rule Argument
ruleArgument
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArgumentAccess().getGroup()); }
(rule__Argument__Group__0)
{ after(grammarAccess.getArgumentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReducer
entryRuleReducer 
:
{ before(grammarAccess.getReducerRule()); }
	 ruleReducer
{ after(grammarAccess.getReducerRule()); } 
	 EOF 
;

// Rule Reducer
ruleReducer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReducerAccess().getGroup()); }
(rule__Reducer__Group__0)
{ after(grammarAccess.getReducerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getAlternatives()); }
(rule__Type__Alternatives)
{ after(grammarAccess.getTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEntity
entryRuleEntity 
:
{ before(grammarAccess.getEntityRule()); }
	 ruleEntity
{ after(grammarAccess.getEntityRule()); } 
	 EOF 
;

// Rule Entity
ruleEntity
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEntityAccess().getGroup()); }
(rule__Entity__Group__0)
{ after(grammarAccess.getEntityAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleFeature
entryRuleFeature 
:
{ before(grammarAccess.getFeatureRule()); }
	 ruleFeature
{ after(grammarAccess.getFeatureRule()); } 
	 EOF 
;

// Rule Feature
ruleFeature
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getFeatureAccess().getAlternatives()); }
(rule__Feature__Alternatives)
{ after(grammarAccess.getFeatureAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleReadorWrite
entryRuleReadorWrite 
:
{ before(grammarAccess.getReadorWriteRule()); }
	 ruleReadorWrite
{ after(grammarAccess.getReadorWriteRule()); } 
	 EOF 
;

// Rule ReadorWrite
ruleReadorWrite
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getReadorWriteAccess().getAlternatives()); }
(rule__ReadorWrite__Alternatives)
{ after(grammarAccess.getReadorWriteAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTypeRef
entryRuleTypeRef 
:
{ before(grammarAccess.getTypeRefRule()); }
	 ruleTypeRef
{ after(grammarAccess.getTypeRefRule()); } 
	 EOF 
;

// Rule TypeRef
ruleTypeRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeRefAccess().getGroup()); }
(rule__TypeRef__Group__0)
{ after(grammarAccess.getTypeRefAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Content__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentAccess().getEntitiesAssignment_0()); }
(rule__Content__EntitiesAssignment_0)
{ after(grammarAccess.getContentAccess().getEntitiesAssignment_0()); }
)

    |(
{ before(grammarAccess.getContentAccess().getMrBlocksAssignment_1()); }
(rule__Content__MrBlocksAssignment_1)
{ after(grammarAccess.getContentAccess().getMrBlocksAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getTypeAssignment_0()); }
(rule__Type__TypeAssignment_0)
{ after(grammarAccess.getTypeAccess().getTypeAssignment_0()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getTypeAssignment_1()); }
(rule__Type__TypeAssignment_1)
{ after(grammarAccess.getTypeAccess().getTypeAssignment_1()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getTypeAssignment_2()); }
(rule__Type__TypeAssignment_2)
{ after(grammarAccess.getTypeAccess().getTypeAssignment_2()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getTypeAssignment_3()); }
(rule__Type__TypeAssignment_3)
{ after(grammarAccess.getTypeAccess().getTypeAssignment_3()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getTypeAssignment_4()); }
(rule__Type__TypeAssignment_4)
{ after(grammarAccess.getTypeAccess().getTypeAssignment_4()); }
)

    |(
{ before(grammarAccess.getTypeAccess().getNameAssignment_5()); }
(rule__Type__NameAssignment_5)
{ after(grammarAccess.getTypeAccess().getNameAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getGroup_0()); }
(rule__Feature__Group_0__0)
{ after(grammarAccess.getFeatureAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getFeatureAccess().getGroup_1()); }
(rule__Feature__Group_1__0)
{ after(grammarAccess.getFeatureAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReadorWrite__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadorWriteAccess().getGroup_0()); }
(rule__ReadorWrite__Group_0__0)
{ after(grammarAccess.getReadorWriteAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getReadorWriteAccess().getGroup_1()); }
(rule__ReadorWrite__Group_1__0)
{ after(grammarAccess.getReadorWriteAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__MapRedoop__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapRedoop__Group__0__Impl
	rule__MapRedoop__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapRedoop__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapRedoopAccess().getDeclarationAssignment_0()); }
(rule__MapRedoop__DeclarationAssignment_0)
{ after(grammarAccess.getMapRedoopAccess().getDeclarationAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapRedoop__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapRedoop__Group__1__Impl
	rule__MapRedoop__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapRedoop__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapRedoopAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getMapRedoopAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapRedoop__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapRedoop__Group__2__Impl
	rule__MapRedoop__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__MapRedoop__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapRedoopAccess().getContentAssignment_2()); }
(rule__MapRedoop__ContentAssignment_2)*
{ after(grammarAccess.getMapRedoopAccess().getContentAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapRedoop__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapRedoop__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapRedoop__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapRedoopAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getMapRedoopAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ListofEntities__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListofEntities__Group__0__Impl
	rule__ListofEntities__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ListofEntities__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListofEntitiesAccess().getListofEntitiesAction_0()); }
(

)
{ after(grammarAccess.getListofEntitiesAccess().getListofEntitiesAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListofEntities__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListofEntities__Group__1__Impl
	rule__ListofEntities__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ListofEntities__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListofEntitiesAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getListofEntitiesAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListofEntities__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListofEntities__Group__2__Impl
	rule__ListofEntities__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__ListofEntities__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListofEntitiesAccess().getEntitiesAssignment_2()); }
(rule__ListofEntities__EntitiesAssignment_2)*
{ after(grammarAccess.getListofEntitiesAccess().getEntitiesAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ListofEntities__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ListofEntities__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ListofEntities__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListofEntitiesAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getListofEntitiesAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MRBlock__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MRBlock__Group__0__Impl
	rule__MRBlock__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MRBlock__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMRBlockAccess().getMapperAssignment_0()); }
(rule__MRBlock__MapperAssignment_0)
{ after(grammarAccess.getMRBlockAccess().getMapperAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MRBlock__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MRBlock__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MRBlock__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMRBlockAccess().getReducerAssignment_1()); }
(rule__MRBlock__ReducerAssignment_1)
{ after(grammarAccess.getMRBlockAccess().getReducerAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Declaration__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__0__Impl
	rule__Declaration__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getProgramKeyword_0()); }

	'program' 

{ after(grammarAccess.getDeclarationAccess().getProgramKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__1__Impl
	rule__Declaration__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getNameAssignment_1()); }
(rule__Declaration__NameAssignment_1)
{ after(grammarAccess.getDeclarationAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getGroup_2()); }
(rule__Declaration__Group_2__0)?
{ after(grammarAccess.getDeclarationAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Declaration__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_2__0__Impl
	rule__Declaration__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getExtendKeyword_2_0()); }

	'extend' 

{ after(grammarAccess.getDeclarationAccess().getExtendKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Declaration__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Declaration__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSuperNameAssignment_2_1()); }
(rule__Declaration__SuperNameAssignment_2_1)
{ after(grammarAccess.getDeclarationAccess().getSuperNameAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Mapper__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapper__Group__0__Impl
	rule__Mapper__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapper__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapperAccess().getMapKeyword_0()); }

	'map(' 

{ after(grammarAccess.getMapperAccess().getMapKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapper__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapper__Group__1__Impl
	rule__Mapper__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapper__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapperAccess().getInkeyAssignment_1()); }
(rule__Mapper__InkeyAssignment_1)
{ after(grammarAccess.getMapperAccess().getInkeyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapper__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapper__Group__2__Impl
	rule__Mapper__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapper__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapperAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getMapperAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapper__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapper__Group__3__Impl
	rule__Mapper__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapper__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapperAccess().getInvalueAssignment_3()); }
(rule__Mapper__InvalueAssignment_3)
{ after(grammarAccess.getMapperAccess().getInvalueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapper__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapper__Group__4__Impl
	rule__Mapper__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapper__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapperAccess().getCommaKeyword_4()); }

	',' 

{ after(grammarAccess.getMapperAccess().getCommaKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapper__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapper__Group__5__Impl
	rule__Mapper__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapper__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapperAccess().getOutkeyAssignment_5()); }
(rule__Mapper__OutkeyAssignment_5)
{ after(grammarAccess.getMapperAccess().getOutkeyAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapper__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapper__Group__6__Impl
	rule__Mapper__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapper__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapperAccess().getCommaKeyword_6()); }

	',' 

{ after(grammarAccess.getMapperAccess().getCommaKeyword_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapper__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapper__Group__7__Impl
	rule__Mapper__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapper__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapperAccess().getOutvalueAssignment_7()); }
(rule__Mapper__OutvalueAssignment_7)
{ after(grammarAccess.getMapperAccess().getOutvalueAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapper__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapper__Group__8__Impl
	rule__Mapper__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapper__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapperAccess().getRightParenthesisKeyword_8()); }

	')' 

{ after(grammarAccess.getMapperAccess().getRightParenthesisKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapper__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapper__Group__9__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapper__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapperAccess().getBlockTerminalRuleCall_9()); }
	RULE_BLOCK
{ after(grammarAccess.getMapperAccess().getBlockTerminalRuleCall_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}






















rule__Argument__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group__0__Impl
	rule__Argument__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getTypeAssignment_0()); }
(rule__Argument__TypeAssignment_0)
{ after(grammarAccess.getArgumentAccess().getTypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Argument__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Argument__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getArgnameAssignment_1()); }
(rule__Argument__ArgnameAssignment_1)
{ after(grammarAccess.getArgumentAccess().getArgnameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Reducer__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reducer__Group__0__Impl
	rule__Reducer__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Reducer__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReducerAccess().getReduceKeyword_0()); }

	'reduce(' 

{ after(grammarAccess.getReducerAccess().getReduceKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reducer__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reducer__Group__1__Impl
	rule__Reducer__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Reducer__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReducerAccess().getOutkeyAssignment_1()); }
(rule__Reducer__OutkeyAssignment_1)
{ after(grammarAccess.getReducerAccess().getOutkeyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reducer__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reducer__Group__2__Impl
	rule__Reducer__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Reducer__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReducerAccess().getCommaKeyword_2()); }

	',' 

{ after(grammarAccess.getReducerAccess().getCommaKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reducer__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reducer__Group__3__Impl
	rule__Reducer__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Reducer__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReducerAccess().getOutvalueAssignment_3()); }
(rule__Reducer__OutvalueAssignment_3)
{ after(grammarAccess.getReducerAccess().getOutvalueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reducer__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reducer__Group__4__Impl
	rule__Reducer__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Reducer__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReducerAccess().getRightParenthesisKeyword_4()); }

	')' 

{ after(grammarAccess.getReducerAccess().getRightParenthesisKeyword_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Reducer__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Reducer__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Reducer__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReducerAccess().getBlockTerminalRuleCall_5()); }
	RULE_BLOCK
{ after(grammarAccess.getReducerAccess().getBlockTerminalRuleCall_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Entity__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__0__Impl
	rule__Entity__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getMetaelementKeyword_0()); }

	'metaelement' 

{ after(grammarAccess.getEntityAccess().getMetaelementKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__1__Impl
	rule__Entity__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getNameAssignment_1()); }
(rule__Entity__NameAssignment_1)
{ after(grammarAccess.getEntityAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__2__Impl
	rule__Entity__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getGroup_2()); }
(rule__Entity__Group_2__0)?
{ after(grammarAccess.getEntityAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__3__Impl
	rule__Entity__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_3()); }

	'{' 

{ after(grammarAccess.getEntityAccess().getLeftCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__4__Impl
	rule__Entity__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getEntityAccess().getFeaturesAssignment_4()); }
(rule__Entity__FeaturesAssignment_4)
{ after(grammarAccess.getEntityAccess().getFeaturesAssignment_4()); }
)
(
{ before(grammarAccess.getEntityAccess().getFeaturesAssignment_4()); }
(rule__Entity__FeaturesAssignment_4)*
{ after(grammarAccess.getEntityAccess().getFeaturesAssignment_4()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_5()); }

	'}' 

{ after(grammarAccess.getEntityAccess().getRightCurlyBracketKeyword_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Entity__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group_2__0__Impl
	rule__Entity__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getExtendKeyword_2_0()); }

	'extend' 

{ after(grammarAccess.getEntityAccess().getExtendKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Entity__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Entity__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getSuperTypeAssignment_2_1()); }
(rule__Entity__SuperTypeAssignment_2_1)
{ after(grammarAccess.getEntityAccess().getSuperTypeAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Feature__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Feature__Group_0__0__Impl
	rule__Feature__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getTypeAssignment_0_0()); }
(rule__Feature__TypeAssignment_0_0)
{ after(grammarAccess.getFeatureAccess().getTypeAssignment_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Feature__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Feature__Group_0__1__Impl
	rule__Feature__Group_0__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getNameAssignment_0_1()); }
(rule__Feature__NameAssignment_0_1)
{ after(grammarAccess.getFeatureAccess().getNameAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Feature__Group_0__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Feature__Group_0__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_0__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getSemicolonKeyword_0_2()); }

	';' 

{ after(grammarAccess.getFeatureAccess().getSemicolonKeyword_0_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Feature__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Feature__Group_1__0__Impl
	rule__Feature__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getReadorWriteParserRuleCall_1_0()); }
	ruleReadorWrite
{ after(grammarAccess.getFeatureAccess().getReadorWriteParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Feature__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Feature__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getSemicolonKeyword_1_1()); }

	';' 

{ after(grammarAccess.getFeatureAccess().getSemicolonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReadorWrite__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReadorWrite__Group_0__0__Impl
	rule__ReadorWrite__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadorWrite__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadorWriteAccess().getReadKeyword_0_0()); }

	'read' 

{ after(grammarAccess.getReadorWriteAccess().getReadKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReadorWrite__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReadorWrite__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadorWrite__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadorWriteAccess().getReadvalAssignment_0_1()); }
(rule__ReadorWrite__ReadvalAssignment_0_1)
{ after(grammarAccess.getReadorWriteAccess().getReadvalAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ReadorWrite__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReadorWrite__Group_1__0__Impl
	rule__ReadorWrite__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadorWrite__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadorWriteAccess().getWriteKeyword_1_0()); }

	'write' 

{ after(grammarAccess.getReadorWriteAccess().getWriteKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ReadorWrite__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ReadorWrite__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ReadorWrite__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadorWriteAccess().getWritevalAssignment_1_1()); }
(rule__ReadorWrite__WritevalAssignment_1_1)
{ after(grammarAccess.getReadorWriteAccess().getWritevalAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__TypeRef__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeRef__Group__0__Impl
	rule__TypeRef__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRef__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRefAccess().getReferencedAssignment_0()); }
(rule__TypeRef__ReferencedAssignment_0)
{ after(grammarAccess.getTypeRefAccess().getReferencedAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__TypeRef__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__TypeRef__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRef__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRefAccess().getMultiAssignment_1()); }
(rule__TypeRef__MultiAssignment_1)?
{ after(grammarAccess.getTypeRefAccess().getMultiAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__MapRedoop__DeclarationAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapRedoopAccess().getDeclarationDeclarationParserRuleCall_0_0()); }
	ruleDeclaration{ after(grammarAccess.getMapRedoopAccess().getDeclarationDeclarationParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MapRedoop__ContentAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapRedoopAccess().getContentContentParserRuleCall_2_0()); }
	ruleContent{ after(grammarAccess.getMapRedoopAccess().getContentContentParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Content__EntitiesAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentAccess().getEntitiesListofEntitiesParserRuleCall_0_0()); }
	ruleListofEntities{ after(grammarAccess.getContentAccess().getEntitiesListofEntitiesParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Content__MrBlocksAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentAccess().getMrBlocksMRBlockParserRuleCall_1_0()); }
	ruleMRBlock{ after(grammarAccess.getContentAccess().getMrBlocksMRBlockParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ListofEntities__EntitiesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getListofEntitiesAccess().getEntitiesEntityParserRuleCall_2_0()); }
	ruleEntity{ after(grammarAccess.getListofEntitiesAccess().getEntitiesEntityParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MRBlock__MapperAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMRBlockAccess().getMapperMapperParserRuleCall_0_0()); }
	ruleMapper{ after(grammarAccess.getMRBlockAccess().getMapperMapperParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MRBlock__ReducerAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMRBlockAccess().getReducerReducerParserRuleCall_1_0()); }
	ruleReducer{ after(grammarAccess.getMRBlockAccess().getReducerReducerParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getDeclarationAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Declaration__SuperNameAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDeclarationAccess().getSuperNameIDTerminalRuleCall_2_1_0()); }
	RULE_ID{ after(grammarAccess.getDeclarationAccess().getSuperNameIDTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mapper__InkeyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapperAccess().getInkeyArgumentParserRuleCall_1_0()); }
	ruleArgument{ after(grammarAccess.getMapperAccess().getInkeyArgumentParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mapper__InvalueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapperAccess().getInvalueArgumentParserRuleCall_3_0()); }
	ruleArgument{ after(grammarAccess.getMapperAccess().getInvalueArgumentParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mapper__OutkeyAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapperAccess().getOutkeyArgumentParserRuleCall_5_0()); }
	ruleArgument{ after(grammarAccess.getMapperAccess().getOutkeyArgumentParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mapper__OutvalueAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapperAccess().getOutvalueArgumentParserRuleCall_7_0()); }
	ruleArgument{ after(grammarAccess.getMapperAccess().getOutvalueArgumentParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getTypeTypeParserRuleCall_0_0()); }
	ruleType{ after(grammarAccess.getArgumentAccess().getTypeTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Argument__ArgnameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArgumentAccess().getArgnameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getArgumentAccess().getArgnameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reducer__OutkeyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReducerAccess().getOutkeyArgumentParserRuleCall_1_0()); }
	ruleArgument{ after(grammarAccess.getReducerAccess().getOutkeyArgumentParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Reducer__OutvalueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReducerAccess().getOutvalueArgumentParserRuleCall_3_0()); }
	ruleArgument{ after(grammarAccess.getReducerAccess().getOutvalueArgumentParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getTypeIntKeyword_0_0()); }
(
{ before(grammarAccess.getTypeAccess().getTypeIntKeyword_0_0()); }

	'int' 

{ after(grammarAccess.getTypeAccess().getTypeIntKeyword_0_0()); }
)

{ after(grammarAccess.getTypeAccess().getTypeIntKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getTypeFloatKeyword_1_0()); }
(
{ before(grammarAccess.getTypeAccess().getTypeFloatKeyword_1_0()); }

	'float' 

{ after(grammarAccess.getTypeAccess().getTypeFloatKeyword_1_0()); }
)

{ after(grammarAccess.getTypeAccess().getTypeFloatKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getTypeDoubleKeyword_2_0()); }
(
{ before(grammarAccess.getTypeAccess().getTypeDoubleKeyword_2_0()); }

	'double' 

{ after(grammarAccess.getTypeAccess().getTypeDoubleKeyword_2_0()); }
)

{ after(grammarAccess.getTypeAccess().getTypeDoubleKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getTypeTextKeyword_3_0()); }
(
{ before(grammarAccess.getTypeAccess().getTypeTextKeyword_3_0()); }

	'text' 

{ after(grammarAccess.getTypeAccess().getTypeTextKeyword_3_0()); }
)

{ after(grammarAccess.getTypeAccess().getTypeTextKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getTypeLongKeyword_4_0()); }
(
{ before(grammarAccess.getTypeAccess().getTypeLongKeyword_4_0()); }

	'long' 

{ after(grammarAccess.getTypeAccess().getTypeLongKeyword_4_0()); }
)

{ after(grammarAccess.getTypeAccess().getTypeLongKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__NameAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getNameIDTerminalRuleCall_5_0()); }
	RULE_ID{ after(grammarAccess.getTypeAccess().getNameIDTerminalRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getEntityAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__SuperTypeAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getSuperTypeEntityCrossReference_2_1_0()); }
(
{ before(grammarAccess.getEntityAccess().getSuperTypeEntityIDTerminalRuleCall_2_1_0_1()); }
	RULE_ID{ after(grammarAccess.getEntityAccess().getSuperTypeEntityIDTerminalRuleCall_2_1_0_1()); }
)
{ after(grammarAccess.getEntityAccess().getSuperTypeEntityCrossReference_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Entity__FeaturesAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEntityAccess().getFeaturesFeatureParserRuleCall_4_0()); }
	ruleFeature{ after(grammarAccess.getEntityAccess().getFeaturesFeatureParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__TypeAssignment_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getTypeTypeRefParserRuleCall_0_0_0()); }
	ruleTypeRef{ after(grammarAccess.getFeatureAccess().getTypeTypeRefParserRuleCall_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Feature__NameAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getFeatureAccess().getNameIDTerminalRuleCall_0_1_0()); }
	RULE_ID{ after(grammarAccess.getFeatureAccess().getNameIDTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReadorWrite__ReadvalAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadorWriteAccess().getReadvalSTRINGTerminalRuleCall_0_1_0()); }
	RULE_STRING{ after(grammarAccess.getReadorWriteAccess().getReadvalSTRINGTerminalRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ReadorWrite__WritevalAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getReadorWriteAccess().getWritevalSTRINGTerminalRuleCall_1_1_0()); }
	RULE_STRING{ after(grammarAccess.getReadorWriteAccess().getWritevalSTRINGTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRef__ReferencedAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRefAccess().getReferencedTypeParserRuleCall_0_0()); }
	ruleType{ after(grammarAccess.getTypeRefAccess().getReferencedTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TypeRef__MultiAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeRefAccess().getMultiAsteriskKeyword_1_0()); }
(
{ before(grammarAccess.getTypeRefAccess().getMultiAsteriskKeyword_1_0()); }

	'*' 

{ after(grammarAccess.getTypeRefAccess().getMultiAsteriskKeyword_1_0()); }
)

{ after(grammarAccess.getTypeRefAccess().getMultiAsteriskKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_BLOCK : '[' ( options {greedy=false;} : . )*']';

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


